{"version":3,"sources":["page/WheaterApp.jsx","App.jsx","index.jsx"],"names":["WeatherApp","useState","weather","setWeather","name","setName","exists","setExists","today","Date","dayName","api","process","e","city","a","preventDefault","axios","get","then","res","data","catch","error","console","log","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","className","main","temp","id","Math","round","getHours","getMinutes","getDay","getMonth","getUTCFullYear","action","onSubmit","searchWeather","type","placeholder","value","onChange","event","target","temp_max","temp_min","humidity","wind","speed","pressure","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fd72283.chunk.js","sourcesContent":["import '../styles/WeatherApp.scss'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\n\r\nfunction WeatherApp() {\r\n    const [weather, setWeather] = useState({})\r\n    const [name, setName] = useState('')\r\n    const [exists, setExists] = useState(false)\r\n\r\n\r\n    let today = new Date();\r\n    let dayName = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n\r\n    const api = {\r\n        key: process.env.REACT_APP_OPEN_WEATHER_KEY,\r\n        base: \"https://api.openweathermap.org/data/2.5/\",\r\n        lang: 'pt-br',\r\n        units: 'metric'\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(\r\n            position => {\r\n                console.log(position.coords.latitude, position.coords.longitude);\r\n                axios.get(`${api.base}weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=${api.key}&${api.lang}&units=${api.units}`).then(res => {\r\n                    setWeather(res.data)\r\n                    setExists(true)\r\n                }).catch((error) => {\r\n                    setExists(false)\r\n                    console.log(error)\r\n                })\r\n            },\r\n            error => {\r\n                console.log(\"Error: \", error)\r\n            });\r\n    }, [])\r\n\r\n    async function searchWeather(e, city,) {\r\n        e.preventDefault()\r\n        await axios.get(`${api.base}weather?q=${city}&appid=${api.key}&${api.lang}&units=${api.units}`).then(res => {\r\n            setWeather(res.data)\r\n            setExists(true)\r\n        }).catch((error) => {\r\n            setExists(false)\r\n            console.log(error)\r\n        })\r\n        setName('')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                {exists ? <h1 className={`${weather.main.temp < 10 ? 'black' : ''}`}>WeatherApp</h1>\r\n                    : <h1>WeatherApp</h1>}\r\n\r\n            </header>\r\n\r\n            {exists ? <div className={`background ${weather.main.temp >= 10 ? 'cloudy' : ''} ${weather.main.temp < 10 ? 'snowy' : ''}`}></div>\r\n                : <div className='background cloudy'></div>}\r\n\r\n            <main>\r\n                <section id='weather'>\r\n\r\n                    {exists ?\r\n                        <div>\r\n                            <h2 className={`${weather.main.temp < 10 ? 'black' : ''}`}><span>{Math.round(weather.main.temp)}C°</span> {weather.name}</h2>\r\n                            <p className={`${weather.main.temp < 10 ? 'black' : ''}`}>{today.getHours()}:{today.getMinutes()} - {dayName[today.getDay()]} - {today.getDay() + 1}/{today.getMonth() + 1}/{today.getUTCFullYear()}</p>\r\n                            <p className={`${weather.main.temp < 10 ? 'black' : ''}`}><i className=\"fas fa-cloud\"></i> - {weather[\"weather\"][0][\"description\"]}</p>\r\n                        </div> :\r\n                        <div>\r\n                            <h2><span>C°</span> CityName</h2>\r\n                            <p>{today.getHours()}:{today.getMinutes()} - {dayName[today.getDay()]} - {today.getDay() + 1}/{today.getMonth() + 1}/{today.getUTCFullYear()}</p>\r\n                            <p><i className=\"fas fa-cloud\"></i> - description</p>\r\n                        </div>}\r\n                </section>\r\n\r\n                <section className='weatherInfo'>\r\n                    {exists ? <div className={`background-info ${weather.main.temp >= 10 ? 'cloudy' : ''} ${weather.main.temp < 10 ? 'snowy' : ''}`}></div>\r\n                        : <div className={`background-info cloudy`}></div>}\r\n\r\n\r\n                    <div>\r\n                        <form action=\"\" id='search' onSubmit={(e) => searchWeather(e, name)}>\r\n                            <input type=\"text\" name=\"region\" id=\"region\" placeholder='Another location' value={name} onChange={event => setName(event.target.value)} />\r\n                            <button><i className=\"fas fa-search\"></i></button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div id='locations'>\r\n                        <ul>\r\n                            <li>Brasília</li>\r\n                            <li>Canadá</li>\r\n                            <li>New York</li>\r\n                            <li>California</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n\r\n                    {exists ? <div id='details'>\r\n                        <hr />\r\n\r\n                        <p>Weather Details</p>\r\n\r\n                        <ul>\r\n                            <li>Hight/Low <span>{weather.main.temp_max}/{weather.main.temp_min}C°</span></li>\r\n                            <li>Humidity <span>{weather.main.humidity}%</span></li>\r\n                            <li>Wind <span>{weather.wind.speed}km/h</span></li>\r\n                            <li>Pressure <span>{weather.main.pressure}mb</span></li>\r\n                        </ul>\r\n\r\n                        <hr />\r\n                    </div> :\r\n                        <div id='details'>\r\n                            <hr />\r\n\r\n                            <p>Weather Details</p>\r\n\r\n                            <ul>\r\n                                <li>Hight/Low <span>-/-C°</span></li>\r\n                                <li>Humidity <span>--%</span></li>\r\n                                <li>Wind <span>-km/h</span></li>\r\n                                <li>Pressure <span>---mb</span></li>\r\n                            </ul>\r\n\r\n                            <hr />\r\n                        </div>\r\n                    }\r\n                </section>\r\n            </main>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default WeatherApp\r\n","import './styles/default.scss';\nimport WeatherApp from './page/WheaterApp'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                    <Route exact path='/' component={WeatherApp}></Route>\n            </BrowserRouter>\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}